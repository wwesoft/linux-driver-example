/*
 * Copyright 2014-2015 Toradex AG
 * Copyright 2012 Freescale Semiconductor, Inc.
 * Copyright 2011 Linaro Ltd.
 *
 * The code contained herein is licensed under the GNU General Public
 * License. You may obtain a copy of the GNU General Public License
 * Version 2 or later at the following locations:
 *
 * http://www.opensource.org/licenses/gpl-license.html
 * http://www.gnu.org/copyleft/gpl.html
 */

/dts-v1/;

#include <dt-bindings/input/input.h>
#include <dt-bindings/interrupt-controller/irq.h>
#include "imx6dl.dtsi"
#include "imx6qdl-colibri.dtsi"

/* Add the following define if you connect a Fusion display with a capacitive
   touch controller */
/* #define PCAP */

/ {
	model = "Toradex Colibri iMX6DL on OBU V3 A1";
	compatible = "toradex,colibri_imx6dl-eval", "toradex,colibri_imx6dl", "fsl,imx6dl";

	aliases {
		i2c0 = &i2cddc;
		i2c1 = &i2c2;
		i2c2 = &i2c3;
	};

	aliases {
		rtc0 = &rtc_i2c;
		rtc1 = &snvs_rtc;
	};

	aliases {
		/* the following, together with kernel patches, forces a fixed assignment
		   between device id and usdhc controller */
		/* i.e. the eMMC on usdhc3 will be /dev/mmcblk0 */
		mmc0 = &usdhc3; /* eMMC */
		mmc1 = &usdhc1; /* MMC 4bit slot */
	};

	extcon_usbc_det: usbc_det {
		compatible = "linux,extcon-usb-gpio";
		debounce = <25>;
		id-gpio = <&gpio7 12 GPIO_ACTIVE_HIGH>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_usbc_det_1>;
	};

	gpio-keys {
		compatible = "gpio-keys";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_gpio_keys>;

		wakeup {
			label = "Wake-Up";
			gpios = <&gpio2 22 GPIO_ACTIVE_HIGH>;
			linux,code = <KEY_WAKEUP>;
			debounce-interval = <10>;
			gpio-key,wakeup;
		};
	};

	regulators {
		reg_usb_host_vbus: usb_host_vbus {
			status = "okay";
		};
	};

	/* Power GPIO gpio6 27*/
	gpio-poweroff {
		compatible = "gpio-poweroff";
		gpios = <&gpio6 27 GPIO_ACTIVE_HIGH>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_power_gpio>;

	};

/*	gpio-restart {
		compatible = "gpio-restart";
		gpios = <&gpio6 27 GPIO_ACTIVE_HIGH>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_power_gpio>;
		priority = <128>;
		active-delay = <1200>;
		inactive-delay = <100>;
		wait-delay = <3000>;

	};
*/
};

&backlight {
#if 1 /* PWM polarity: if 1 is brightest */
	pwms = <&pwm3 0 5000000 0>;
#if 0 /* Fusion 7 needs 10kHz PWM frequency */
	pwms = <&pwm3 0 100000 0>;
#endif
#else /* PWM polarity: if 0 is brightest */
	pwms = <&pwm3 0 5000000 1>;
#endif
	brightness-levels = <0 4 8 16 32 64 128 255>;
	default-brightness-level = <6>;
	status = "okay";
};

/ {
	clocks {
		/* fixed crystal dedicated to mcp251x */
		clk16m: clk@1 {
			compatible = "fixed-clock";
			reg=<1>;
			#clock-cells = <0>;
			clock-frequency = <16000000>;
			clock-output-names = "clk16m";
		};
	};
};

/* Colibri SPI */
&ecspi4 {
        fsl,spi-num-chipselects = <2>;
        cs-gpios = <&gpio3 29 0>, <&gpio5 2 0>;
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_ecspi4 &pinctrl_spi_cs0 &pinctrl_spi_cs1>;
	status = "okay";

	qt60248: qt60248@0 {
		compatible = "microchip,qt60248";
		reg = <0>;
		interrupt-parent = <&gpio3>;
		interrupts = <27 0x2>;
		spi-max-frequency = <10000000>;
		status = "okay";
	};
	spidev0: spidev@1 {
		compatible = "toradex,evalspi";
		reg = <0>;
		spi-max-frequency = <23000000>;
		status = "disabled";
	};
};

&hdmi_audio {
	status = "okay";
};

&hdmi_core {
	status = "okay";
};

&hdmi_video {
	status = "okay";
};

/*
 * I2C: I2C3_SDA/SCL on SODIMM 194/196 (e.g. RTC on carrier
 * board)
 */
&i2c3 {
	status = "okay";

	/* ADC converter Pullupp resistor && audio amplifier port*/
	gpiom1: gpio@27 {
	    compatible = "microchip,mcp23017";
	    gpio-controller;
	    #gpio-cells = <2>;
	    reg = <0x27>;
	};

	/* PCF85063 real time clock  */
	rtc_i2c: rtc@51 {
	    compatible = "nxp,pcf85063";
	    reg = <0x51>;
	};

	/*  ADC in  */
	ad7291@2a {
	    compatible = "ad,ad7291";
	    reg = <0x2a>;
	    #address-cells = <1>;
	    #size-cells = <0>;
	    interrupt-parent = <&gpio2>;
	    interrupts = <0 IRQ_TYPE_EDGE_FALLING>;
	};


	bmi160@68 {
	    compatible = "bosch,bmi160";
	    reg = <0x68>;
	    interrupt-parent = <&gpio2>;
	    interrupts = <11 IRQ_TYPE_EDGE_RISING>;
	    interrupt-names = "INT1";
	};

	/* Light sensor */
	tsl2572@29 {
	    compatible = "amstaos,tsl2572";
	    reg = <0x39>;
	    interrupt-parent = <&gpio2>;
	    interrupts = <4 IRQ_TYPE_EDGE_FALLING>;
	    interrupts-extended = <&gpio2 4 IRQ_TYPE_EDGE_FALLING>;
	};
	
	/* LP55231 9-channel LED driver  */
	lp55231@32 {
		compatible = "ti,lp55231";
		reg = <0x32>;
		clock-mode = /bits/ 8 <1>;

		chan0 {
			chan-name = "d1";
			led-cur = /bits/ 8 <0x14>;  /* 0x14*10 mA = 2mA */
			max-cur = /bits/ 8 <0x20>;
		};

		chan1 {
			chan-name = "d2";
			led-cur = /bits/ 8 <0x14>;
			max-cur = /bits/ 8 <0x20>;
		};

		chan2 {
			chan-name = "d3";
			led-cur = /bits/ 8 <0x14>;
			max-cur = /bits/ 8 <0x20>;
		};

		chan3 {
			chan-name = "d4";
			led-cur = /bits/ 8 <0x14>;
			max-cur = /bits/ 8 <0x20>;
		};

		chan4 {
			chan-name = "d5";
			led-cur = /bits/ 8 <0x14>;
			max-cur = /bits/ 8 <0x20>;
		};

		chan5 {
			chan-name = "d6";
			led-cur = /bits/ 8 <0x14>;
			max-cur = /bits/ 8 <0x20>;
		};

		chan6 {
			chan-name = "d7";
			led-cur = /bits/ 8 <0x14>;
			max-cur = /bits/ 8 <0x20>;
		};

		chan7 {
			chan-name = "d8";
			led-cur = /bits/ 8 <0x14>;
			max-cur = /bits/ 8 <0x20>;
		};

		chan8 {
			chan-name = "d9";
			led-cur = /bits/ 8 <0x14>;
			max-cur = /bits/ 8 <0x20>;
		};
	};

	
};

/*
 * DDC_I2C: I2C2_SDA/SCL on extension connector pin 15/16
 */
&i2cddc {
	status = "okay";

	hdmi_ddc: edid@50 {
		compatible = "fsl,imx6-hdmi-i2c";
		reg = <0x50>;
	};
};


&iomuxc {
	/*
	 * Mux all pins which are unused to be GPIOs
	 * so they are ready for export to user space
	 */
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_weim_gpio_1
	             &pinctrl_weim_gpio_3 &pinctrl_adc_alert_gpio
	             &pinctrl_weim_gpio_5 &pinctrl_weim_gpio_6
	             &pinctrl_csi_gpio_2
	             &pinctrl_gpio_1 &pinctrl_nxp_pn7462_gpio
	             &pinctrl_gpio_2 &pinctrl_myled_gpio
	             &pinctrl_usbh_oc_1 &pinctrl_usbc_id_1
	             &pinctrl_stm32_reset_gpio &pinctrl_mwifi_reset>;

	gpio {
		pinctrl_adc_alert_gpio: adc_gpio {
			fsl,pins = <
				MX6QDL_PAD_NANDF_D0__GPIO2_IO00 PAD_CTRL_HYS_PU
			>;
		};

		pinctrl_pcap_1: pcap-1 {
			fsl,pins = <
				MX6QDL_PAD_GPIO_9__GPIO1_IO09	PAD_CTRL_HYS_PD /* SODIMM 28 */
				MX6QDL_PAD_SD4_DAT2__GPIO2_IO10	PAD_CTRL_HYS_PD /* SODIMM 30 */
			>;
		};

		pinctrl_power_gpio: power-gpio {
			fsl,pins = <
				MX6QDL_PAD_RGMII_RD1__GPIO6_IO27	PAD_CTRL_HYS_PD
			>;
		};
		pinctrl_reset_gpio: reset-gpio {
			fsl,pins = <
				MX6QDL_PAD_EIM_RW__GPIO2_IO26		0x17830   /* PAD_CTRL_HYS_PD */
			>;
		};
		pinctrl_nxp_pn7462_gpio: pn7462-gpio {
			fsl,pins = <
				MX6QDL_PAD_EIM_DA0__GPIO3_IO00	PAD_CTRL_HYS_PD
				MX6QDL_PAD_EIM_DA1__GPIO3_IO01	PAD_CTRL_HYS_PD
			>;
		};
		pinctrl_myled_gpio: myled-gpio {
			fsl,pins = <
				MX6QDL_PAD_DISP0_DAT22__GPIO5_IO16	PAD_CTRL_HYS_PD
			>;
		};
		pinctrl_stm32_reset_gpio: stm32-reset-gpio {
			fsl,pins = <
				MX6QDL_PAD_GPIO_1__GPIO1_IO01	PAD_CTRL_IN
				MX6QDL_PAD_EIM_A21__GPIO2_IO17	PAD_CTRL_HYS_PD
				MX6QDL_PAD_SD2_CMD__GPIO1_IO11	PAD_CTRL_HYS_PU
			>;
		};
		pinctrl_spi_cs0: spi_cs0 {
			fsl,pins = <
				MX6QDL_PAD_EIM_D29__GPIO3_IO29   PAD_CTRL_HYS_PU
			>;
		};
		pinctrl_mwifi_reset: mwifi-reset {
			fsl,pins = <
				MX6QDL_PAD_EIM_A17__GPIO2_IO21   PAD_CTRL_HYS_PU
			>;
		};
	};
};



&lcd {
	status = "okay";
};

&mxcfb1 {
	status = "okay";
};

&mxcfb2 {
	status = "okay";
};

#ifndef PCAP
&pwm1 {
	status = "okay";
};
#endif

&pwm2 {
	status = "disable";
};

&pwm3 {
	status = "okay";
};

&pwm4 {
	status = "okay";
};


&sound_hdmi {
	status = "okay";
};

&uart1 {
	status = "okay";
};

&uart2 {
	status = "okay";
#if 0
	linux,rs485-enabled-at-boot-time;
#endif
};

&uart3 {
	status = "okay";
};

&usbh1 {
	status = "okay";
};

&usbotg {
	status = "okay";
	extcon = <&extcon_usbc_det>, <&extcon_usbc_det>;
};

/* MMC */
&usdhc1 {
	status = "okay";
};


